#!/usr/bin/env runhaskell

{-# LANGUAGE OverloadedStrings #-}

import Development.Shake
import Development.Shake.FilePath hiding ((</>))
import Prelude hiding (FilePath)
import Shelly
import System.Environment
import Filesystem
import Filesystem.Path hiding (replaceExtension)
import Filesystem.Path.CurrentOS (encodeString)

main = do
    args <- getArgs
    case args of
        ("help":_)  -> do
            putStrLn "Help M-e-e-e!"
        ("clean":_) -> do
            shelly $ verbosely $ do
                whenM (test_f "index.html")    $ rm_f "index.html"
                whenM (test_f "pythongis.pdf") $ rm_f "pythongis.pdf"
        _ -> rules

rules = shake shakeOptions $ do

    want ["index.html"]
    "*.html" *> \html -> do
        let md = html `replaceExtension` "md"
        need [md]
        system' "pandoc" [ "-f", "markdown"
                         , "-t", "s5"
                         -- , "--incremental"
                         , "--smart"
                         , "--standalone"
                         , "-o", html
                         , md
                         ]

    want ["pythongis.pdf"]
    "*.pdf" *> \pdf -> do
        pwd' <- liftIO $ getWorkingDirectory
        let fileUrl = ("file://" ++) . encodeString $ pwd' </> "index.html"
        need ["index.html"]
        system' "./s5topdf.lhs" [ "17"
                                , fileUrl
                                , pdf
                                ]

-- vim: set filetype=haskell:
